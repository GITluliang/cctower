<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nuoze.cctower.dao.CarDAO">
  <resultMap id="BaseResultMap" type="com.nuoze.cctower.pojo.entity.Car">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="parking_id" jdbcType="BIGINT" property="parkingId" />
    <result column="parking_type" jdbcType="TINYINT" property="parkingType" />
    <result column="monthly_parking_start" jdbcType="TIMESTAMP" property="monthlyParkingStart" />
    <result column="monthly_parking_end" jdbcType="TIMESTAMP" property="monthlyParkingEnd" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="infield_permission" jdbcType="TINYINT" property="infieldPermission" />
    <result column="create_id" jdbcType="BIGINT" property="createId" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="free_time" jdbcType="INTEGER" property="freeTime" />
    <result column="cost" jdbcType="DECIMAL" property="cost" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `number`, parking_id, parking_type, monthly_parking_start, monthly_parking_end, status,
    infield_permission, create_id, open_id, free_time, cost, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from car
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from car
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.nuoze.cctower.pojo.entity.Car">
    insert into car (id, `number`, parking_id, 
      parking_type, monthly_parking_start, monthly_parking_end, status, infield_permission, create_id,
      open_id, free_time, cost, create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{number,jdbcType=VARCHAR}, #{parkingId,jdbcType=BIGINT}, 
      #{parkingType,jdbcType=TINYINT}, #{monthlyParkingStart,jdbcType=TIMESTAMP}, #{monthlyParkingEnd,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=TINYINT}, #{infieldPermission,jdbcType=TINYINT}, #{createId,jdbcType=BIGINT}, #{openId,jdbcType=VARCHAR},
      #{freeTime,jdbcType=INTEGER}, #{cost,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.nuoze.cctower.pojo.entity.Car">
    insert into car
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="parkingId != null">
        parking_id,
      </if>
      <if test="parkingType != null">
        parking_type,
      </if>
      <if test="monthlyParkingStart != null">
        monthly_parking_start,
      </if>
      <if test="monthlyParkingEnd != null">
        monthly_parking_end,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="infieldPermission != null">
        infield_permission,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="freeTime != null">
        free_time,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="parkingId != null">
        #{parkingId,jdbcType=BIGINT},
      </if>
      <if test="parkingType != null">
        #{parkingType,jdbcType=TINYINT},
      </if>
      <if test="monthlyParkingStart != null">
        #{monthlyParkingStart,jdbcType=TIMESTAMP},
      </if>
      <if test="monthlyParkingEnd != null">
        #{monthlyParkingEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="infieldPermission != null">
        #{infield_permission,jdbcType=TINYINT},
      </if>
      <if test="createId != null">
        #{create_id,jdbcType=BIGINT},
      </if>
      <if test="openId != null">
        #{open_id,jdbcType=VARCHAR},
      </if>
      <if test="freeTime != null">
        #{free_time,jdbcType=INTEGER},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nuoze.cctower.pojo.entity.Car">
    update car
    <set>
      <if test="number != null">
        `number` = #{number,jdbcType=VARCHAR},
      </if>
      <if test="parkingId != null">
        parking_id = #{parkingId,jdbcType=BIGINT},
      </if>
      <if test="parkingType != null">
        parking_type = #{parkingType,jdbcType=TINYINT},
      </if>
      <if test="monthlyParkingStart != null">
        monthly_parking_start = #{monthlyParkingStart,jdbcType=TIMESTAMP},
      </if>
      <if test="monthlyParkingEnd != null">
        monthly_parking_end = #{monthlyParkingEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="infieldPermission != null">
        infield_permission = #{infieldPermission,jdbcType=TINYINT},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=BIGINT},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="freeTime != null">
        free_time = #{freeTime,jdbcType=INTEGER},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nuoze.cctower.pojo.entity.Car">
    update car
    set `number` = #{number,jdbcType=VARCHAR},
      parking_id = #{parkingId,jdbcType=BIGINT},
      parking_type = #{parkingType,jdbcType=TINYINT},
      monthly_parking_start = #{monthlyParkingStart,jdbcType=TIMESTAMP},
      monthly_parking_end = #{monthlyParkingEnd,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      infield_permission = #{infieldPermission,jdbcType=TINYINT},
      create_id = #{createId,jdbcType=BIGINT},
      open_id = #{openId,jdbcType=VARCHAR},
      free_time = #{freeTime,jdbcType=INTEGER},
      cost = #{cost,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="list" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from car
    <where>
      <if test="id != null and id != ''">and id = #{id}</if>
      <if test="number != null and number != ''">and number = #{number}</if>
      <if test="parkingId != null and parkingId != ''">and parking_id = #{parkingId}</if>
      <if test="parkingType != null and parkingType != ''">and parking_type = #{parkingType}</if>
      <if test="monthlyParkingStart != null and monthlyParkingStart != ''">and monthly_parking_start = #{monthlyParkingStart}</if>
      <if test="monthlyParkingEnd != null and monthlyParkingEnd != ''">and monthly_parking_end = #{monthlyParkingEnd}</if>
      <if test="status != null and status != ''">and status = #{status}</if>
      <if test="infieldPermission != null and infieldPermission != ''">and infield_permission = #{infieldPermission}</if>
      <if test="createId != null and createId != ''">and create_id = #{createId}</if>
      <if test="createTime != null and createTime != ''">and create_time = #{createTime}</if>
      <if test="updateTime != null and updateTime != ''">and update_time = #{updateTime}</if>
      <if test="keyword != null and keyword != ''">
        AND (number LIKE CONCAT('%',#{keyword},'%'))
      </if>
      <if test="parkingIds != null and parkingIds.size > 0 ">
        and parking_id in
        <foreach item="parkingId" collection="parkingIds" open="(" separator="," close=")">
          #{parkingId}
        </foreach>
      </if>
    </where>
    <choose>
      <when test="sort != null and sort.trim() != ''">
        order by ${sort} ${order}
      </when>
      <otherwise>
        order by create_time desc
      </otherwise>
    </choose>
    <if test="offset != null and limit != null">
      limit #{offset}, #{limit}
    </if>
  </select>

  <select id="count" resultType="int">
    select count(id) from car
    <where>
      <if test="id != null and id != ''">and id = #{id}</if>
      <if test="number != null and number != ''">and number = #{number}</if>
      <if test="parkingId != null and parkingId != ''">and parking_id = #{parkingId}</if>
      <if test="parkingType != null and parkingType != ''">and parking_type = #{parkingType}</if>
      <if test="monthlyParkingStart != null and monthlyParkingStart != ''">and monthly_parking_start = #{monthlyParkingStart}</if>
      <if test="monthlyParkingEnd != null and monthlyParkingEnd != ''">and monthly_parking_end = #{monthlyParkingEnd}</if>
      <if test="status != null and status != ''">and status = #{status}</if>
      <if test="infieldPermission != null and infieldPermission != ''">and infield_permission = #{infieldPermission}</if>
      <if test="createId != null and createId != ''">and create_id = #{createId}</if>
      <if test="createTime != null and createTime != ''">and create_time = #{createTime}</if>
      <if test="updateTime != null and updateTime != ''">and update_time = #{updateTime}</if>
      <if test="keyword != null and keyword != ''">
        AND (number LIKE CONCAT('%',#{keyword},'%'))
      </if>
      <if test="parkingIds != null and parkingIds.size > 0 ">
        and parking_id in
        <foreach item="parkingId" collection="parkingIds" open="(" separator="," close=")">
          #{parkingId}
        </foreach>
      </if>
    </where>
  </select>

  <select id="findByParkingIdAndCarNumber" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from car
    where parking_id = #{parkingId}
    and number = #{carNumber}
  </select>

  <delete id="batchRemove">
    delete
    from car
    where id in
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>

  <select id="selectByNumberAndOpenId" resultType="long">
    select id
    from car
    where number = #{number}
    and open_id = #{openId}
  </select>

  <select id="findByCarNumberAndParkingType" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from car
    where number = #{carNumber}
    and parking_type = #{parkingType}
  </select>

  <select id="findByParkingIdAndParkingType" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from car
    where parking_id = #{parkingId}
    and parking_type = #{parkingType}
  </select>
</mapper>