<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nuoze.cctower.dao.MemberDAO">
  <resultMap id="BaseResultMap" type="com.nuoze.cctower.pojo.entity.Member">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, balance, open_id, phone, nick_name, avatar_url, province, city, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from member
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.nuoze.cctower.pojo.entity.Member">
    insert into member (id, balance, open_id, 
      phone, nick_name, avatar_url, 
      province, city, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{balance,jdbcType=DECIMAL}, #{openId,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR}, 
      #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.nuoze.cctower.pojo.entity.Member">
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nuoze.cctower.pojo.entity.Member">
    update member
    <set>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nuoze.cctower.pojo.entity.Member">
    update member
    set balance = #{balance,jdbcType=DECIMAL},
      open_id = #{openId,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByOpenId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from member
    where open_id = #{openId,jdbcType=VARCHAR}
  </select>

  <!-- **************************** -->

  <select id="list" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from member
    <where>
      <if test="id != null and id != ''"> and id = #{id} </if>
      <if test="balance != null and balance != ''"> and balance = #{balance} </if>
      <if test="openId != null and openId != ''"> and open_id = #{openId} </if>
      <if test="phone != null and phone != ''"> and phone = #{phone} </if>
      <if test="nickName != null and nickName != ''"> and nick_name like #{nickName} </if>
      <if test="avatarUrl != null and avatarUrl != ''"> and avatar_url = #{avatarUrl} </if>
      <if test="province != null and province != ''"> and province = #{province} </if>
      <if test="city != null and city != ''"> and city = #{city} </if>
      <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
      <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
    </where>
    <choose>
      <when test="sort != null and sort.trim() != ''">
        order by ${sort} ${order}
      </when>
      <otherwise>
        order by id desc
      </otherwise>
    </choose>
    <if test="offset != null and limit != null">
      limit ${offset}, ${limit}
    </if>
  </select>
  <select id="count" resultType="int">
    select count(*) from member
    <where>
      <if test="id != null and id != ''"> and id = #{id} </if>
      <if test="balance != null and balance != ''"> and balance = #{balance} </if>
      <if test="openId != null and openId != ''"> and open_id = #{openId} </if>
      <if test="phone != null and phone != ''"> and phone = #{phone} </if>
      <if test="nickName != null and nickName != ''"> and nick_name like #{nickName} </if>
      <if test="avatarUrl != null and avatarUrl != ''"> and avatar_url = #{avatarUrl} </if>
      <if test="province != null and province != ''"> and province = #{province} </if>
      <if test="city != null and city != ''"> and city = #{city} </if>
      <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
      <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
    </where>
  </select>
</mapper>