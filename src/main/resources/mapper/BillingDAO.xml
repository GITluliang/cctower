<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nuoze.cctower.dao.BillingDAO">
  <resultMap id="BaseResultMap" type="com.nuoze.cctower.pojo.entity.Billing">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="parking_id" jdbcType="BIGINT" property="parkingId" />
    <result column="monthly_price" jdbcType="DECIMAL" property="monthlyPrice" />
    <result column="free_time" jdbcType="INTEGER" property="freeTime" />
    <result column="paid_free_time" jdbcType="INTEGER" property="paidFreeTime" />
    <result column="wechat_discount" jdbcType="INTEGER" property="wechatDiscount" />
    <result column="alipay_discount" jdbcType="INTEGER" property="alipayDiscount" />
    <result column="day_cost" jdbcType="DECIMAL" property="dayCost" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="coupon_time" jdbcType="INTEGER" property="couponTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, parking_id, monthly_price, free_time, paid_free_time, `wechat_discount`, `alipay_discount`, day_cost, user_id, coupon_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from billing
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from billing
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.nuoze.cctower.pojo.entity.Billing">
    insert into billing (id, parking_id, monthly_price,free_time, paid_free_time, `wechat_discount`, `alipay_discount`,day_cost, user_id, coupon_time)
    values (#{id,jdbcType=BIGINT}, #{parkingId,jdbcType=BIGINT}, #{monthlyPrice,jdbcType=DECIMAL},
      #{freeTime,jdbcType=INTEGER}, #{paidFreeTime,jdbcType=INTEGER}, #{wechatDiscount,jdbcType=INTEGER}, #{alipayDiscount,jdbcType=INTEGER},
      #{dayCost,jdbcType=DECIMAL}, #{userId,jdbcType=BIGINT},  #{couponTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.nuoze.cctower.pojo.entity.Billing">
    insert into billing
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="parkingId != null">
        parking_id,
      </if>
      <if test="monthlyPrice != null">
        monthly_price,
      </if>
      <if test="freeTime != null">
        free_time,
      </if>
      <if test="paidFreeTime != null">
        paid_free_time,
      </if>
      <if test="wechatDiscount != null">
        `wechat_discount`,
      </if>
      <if test="alipayDiscount != null">
        `alipay_discount`,
      </if>
      <if test="dayCost != null">
        day_cost,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="couponTime != null">
        coupon_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="parkingId != null">
        #{parkingId,jdbcType=BIGINT},
      </if>
      <if test="monthlyPrice != null">
        #{monthlyPrice,jdbcType=DECIMAL},
      </if>
      <if test="freeTime != null">
        #{freeTime,jdbcType=INTEGER},
      </if>
      <if test="paidFreeTime != null">
        #{paidFreeTime,jdbcType=INTEGER},
      </if>
      <if test="wechatDiscount != null">
        #{wechatDiscount,jdbcType=INTEGER},
      </if>
      <if test="alipayDiscount != null">
        #{alipayDiscount,jdbcType=INTEGER},
      </if>
      <if test="dayCost != null">
        #{dayCost,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="couponTime != null">
        #{couponTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nuoze.cctower.pojo.entity.Billing">
    update billing
    <set>
      <if test="parkingId != null">
        parking_id = #{parkingId,jdbcType=BIGINT},
      </if>
      <if test="monthlyPrice != null">
        monthly_price = #{monthlyPrice,jdbcType=DECIMAL},
      </if>
      <if test="freeTime != null">
        free_time = #{freeTime,jdbcType=INTEGER},
      </if>
      <if test="paidFreeTime != null">
        paid_free_time = #{paidFreeTime,jdbcType=INTEGER},
      </if>
      <if test="wechatDiscount != null">
        `wechat_discount` = #{wechatDiscount,jdbcType=INTEGER},
      </if>
      <if test="alipayDiscount != null">
        `alipay_discount` = #{alipayDiscount,jdbcType=INTEGER},
      </if>
      <if test="dayCost != null">
        day_cost = #{dayCost,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="couponTime != null">
        coupon_time = #{couponTime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nuoze.cctower.pojo.entity.Billing">
    update billing
    set parking_id = #{parkingId,jdbcType=BIGINT},
      monthly_price = #{monthlyPrice,jdbcType=DECIMAL},
      free_time = #{freeTime,jdbcType=INTEGER},
      paid_free_time = #{paidFreeTime,jdbcType=INTEGER},
      `wechat_discount` = #{wechatDiscount,jdbcType=INTEGER},
      `alipay_discount` = #{alipayDiscount,jdbcType=INTEGER},
      day_cost = #{dayCost,jdbcType=DECIMAL},
      user_id = #{userId,jdbcType=BIGINT},
      coupon_time = #{couponTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="list" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from billing
    <where>
      <if test="id != null and id != ''">and id = #{id}</if>
      <if test="parkingId != null and parkingId != ''">and parking_id = #{parkingId}</if>
      <if test="freeTime != null and freeTime != ''">and free_time = #{freeTime}</if>
      <if test="paidFreeTime != null and paidFreeTime != ''">and paid_free_time = #{paidFreeTime}</if>
      <if test="wechatDiscount != null and wechatDiscount != ''">and wechat_discount = #{wechatDiscount}</if>
      <if test="alipayDiscount != null and alipayDiscount != ''">and alipay_discount = #{alipayDiscount}</if>
      <if test="dayCost != null and dayCost != ''">and day_cost = #{dayCost}</if>
      <if test="userId != null and userId != ''">and user_id = #{userId}</if>
      <if test="couponTime != null and couponTime != ''">and coupon_time = #{couponTime}</if>
    </where>
    <choose>
      <when test="sort != null and sort.trim() != ''">
        order by ${sort} ${order}
      </when>
      <otherwise>
        order by id desc
      </otherwise>
    </choose>
    <if test="offset != null and limit != null">
      limit #{offset}, #{limit}
    </if>
  </select>

  <select id="selectByParkingId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from billing
    where parking_id = #{parkingId,jdbcType=BIGINT}
  </select>

  <select id="count" resultType="int">
    select count(id) from billing
    <where>
      <if test="id != null and id != ''">and id = #{id}</if>
      <if test="parkingId != null and parkingId != ''">and parking_id = #{parkingId}</if>
      <if test="freeTime != null and freeTime != ''">and free_time = #{freeTime}</if>
      <if test="paidFreeTime != null and paidFreeTime != ''">and paid_free_time = #{paidFreeTime}</if>
      <if test="wechatDiscount != null and wechatDiscount != ''">and wechat_discount = #{wechatDiscount}</if>
      <if test="alipayDiscount != null and alipayDiscount != ''">and alipay_discount = #{alipayDiscount}</if>
      <if test="dayCost != null and dayCost != ''">and day_cost = #{dayCost}</if>
      <if test="userId != null and userId != ''">and user_id = #{userId}</if>
      <if test="couponTime != null and couponTime != ''">and coupon_time = #{couponTime}</if>
    </where>
  </select>

  <delete id="batchRemove">
    delete
    from billing
    where id in
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
</mapper>